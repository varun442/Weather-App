{"ast":null,"code":"var _jsxFileName = \"D:\\\\Die Trying\\\\React\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Search from \"./Components/search/search\";\nimport CurrentWeather from \"./Components/current-weather/current-weather\";\nimport Forecast from \"./Components/forecast-weather/forecast\";\nimport CurrentPollution from \"./Components/current-pollution/currentpollution\";\nimport ForecastPollution from \"./Components/forecast-pollution/forecastpollution\";\nimport { WEATHER_API_URL, WEATHER_API_KEY, POLLUTION_API_URL, POLLUTION_API_KEY } from \"./api\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [currentPollution, setCurrentPollution] = useState(null);\n  // const [toggle, setToggle] = useState({\n  //   button1: false,\n  //   button2: false,\n  //   button3: false,\n  // });\n\n  // const handleClick = (buttonId) => {\n  //   setToggle({ ...toggle, [buttonId]: !toggle[buttonId] });\n  // };\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    const forecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    const currentPollutionFetch = fetch(`${POLLUTION_API_URL}?lat=${lat}&lon=${lon}&appid=${POLLUTION_API_KEY}`);\n    Promise.all([currentWeatherFetch, forecastFetch, currentPollutionFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forcastResponse = await response[1].json();\n      const currentPollution = await response[2].json();\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForecast({\n        city: searchData.label,\n        ...forcastResponse\n      });\n      setCurrentPollution({\n        ...currentPollution\n      });\n    }).catch(console.log);\n    console.log(forecast);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearchChange: handleOnSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      data: currentWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 26\n    }, this), forecast && toggle.button1 && /*#__PURE__*/_jsxDEV(Forecast, {\n      data: forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 38\n    }, this), currentPollution && toggle.button2 && /*#__PURE__*/_jsxDEV(CurrentPollution, {\n      data: currentPollution\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 46\n    }, this), /*#__PURE__*/_jsxDEV(ForecastPollution, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mDUcOFV2M0VocszUpL9Sq5P1T+g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Search","CurrentWeather","Forecast","CurrentPollution","ForecastPollution","WEATHER_API_URL","WEATHER_API_KEY","POLLUTION_API_URL","POLLUTION_API_KEY","App","currentWeather","setCurrentWeather","forecast","setForecast","currentPollution","setCurrentPollution","handleOnSearchChange","searchData","lat","lon","value","split","currentWeatherFetch","fetch","forecastFetch","currentPollutionFetch","Promise","all","then","response","weatherResponse","json","forcastResponse","city","label","catch","console","log","toggle","button1","button2"],"sources":["D:/Die Trying/React/weather-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Search from \"./Components/search/search\";\nimport CurrentWeather from \"./Components/current-weather/current-weather\";\nimport Forecast from \"./Components/forecast-weather/forecast\";\nimport CurrentPollution from \"./Components/current-pollution/currentpollution\";\nimport ForecastPollution from \"./Components/forecast-pollution/forecastpollution\";\nimport {\n  WEATHER_API_URL,\n  WEATHER_API_KEY,\n  POLLUTION_API_URL,\n  POLLUTION_API_KEY,\n} from \"./api\";\nimport \"./App.css\";\n\nfunction App() {\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [currentPollution, setCurrentPollution] = useState(null);\n  // const [toggle, setToggle] = useState({\n  //   button1: false,\n  //   button2: false,\n  //   button3: false,\n  // });\n\n  // const handleClick = (buttonId) => {\n  //   setToggle({ ...toggle, [buttonId]: !toggle[buttonId] });\n  // };\n  const handleOnSearchChange = (searchData) => {\n    const [lat, lon] = searchData.value.split(\" \");\n\n    const currentWeatherFetch = fetch(\n      `${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n    const forecastFetch = fetch(\n      `${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n\n    const currentPollutionFetch = fetch(\n      `${POLLUTION_API_URL}?lat=${lat}&lon=${lon}&appid=${POLLUTION_API_KEY}`\n    );\n\n    Promise.all([currentWeatherFetch, forecastFetch, currentPollutionFetch])\n      .then(async (response) => {\n        const weatherResponse = await response[0].json();\n        const forcastResponse = await response[1].json();\n        const currentPollution = await response[2].json();\n\n        setCurrentWeather({ city: searchData.label, ...weatherResponse });\n        setForecast({ city: searchData.label, ...forcastResponse });\n        setCurrentPollution({ ...currentPollution });\n      })\n      .catch(console.log);\n\n    console.log(forecast);\n  };\n\n  return (\n    <div className=\"container\">\n      <Search onSearchChange={handleOnSearchChange} />\n      {/* <button onClick={handleClick(\"button1\")}>Weather Forecast</button>\n      <button onClick={handleClick(\"button2\")}>Current Pollution</button> */}\n      {currentWeather && <CurrentWeather data={currentWeather} />}\n      {forecast && toggle.button1 && <Forecast data={forecast} />}\n      {currentPollution && toggle.button2 && <CurrentPollution data={currentPollution} /> }\n      <ForecastPollution />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}