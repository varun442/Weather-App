{"ast":null,"code":"import _slicedToArray from \"D:/Die Trying/React/weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"D:/Die Trying/React/weather-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectWithoutProperties from \"D:/Die Trying/React/weather-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toPropertyKey from \"D:/Die Trying/React/weather-app/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js\";\nimport _defineProperty from \"D:/Die Trying/React/weather-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"D:/Die Trying/React/weather-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"D:/Die Trying/React/weather-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"D:/Die Trying/React/weather-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _excluded = [\"components\", \"selectRef\", \"isLoading\", \"cacheUniqs\"];\n// src/index.ts\nimport Select from \"react-select\";\n\n// src/useAsyncPaginate.ts\nimport { useState as useState2, useCallback as useCallback2 } from \"react\";\n\n// src/useAsyncPaginateBase.ts\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport useIsMountedRef from \"use-is-mounted-ref\";\nimport { useLazyRef } from \"@vtaits/use-lazy-ref\";\n\n// src/getInitialCache.ts\nvar getInitialCache = function getInitialCache(params) {\n  return {\n    isFirstLoad: true,\n    options: [],\n    hasMore: true,\n    isLoading: false,\n    additional: params.additional\n  };\n};\n\n// src/getInitialOptionsCache.ts\nvar getInitialOptionsCache = function getInitialOptionsCache(_ref) {\n  var options = _ref.options,\n    defaultOptions = _ref.defaultOptions,\n    additional = _ref.additional,\n    defaultAdditional = _ref.defaultAdditional;\n  var initialOptions = defaultOptions === true ? null : defaultOptions instanceof Array ? defaultOptions : options;\n  if (initialOptions) {\n    return {\n      \"\": {\n        isFirstLoad: false,\n        isLoading: false,\n        options: initialOptions,\n        hasMore: true,\n        additional: defaultAdditional || additional\n      }\n    };\n  }\n  return {};\n};\n\n// src/defaultShouldLoadMore.ts\nvar AVAILABLE_DELTA = 10;\nvar defaultShouldLoadMore = function defaultShouldLoadMore(scrollHeight, clientHeight, scrollTop) {\n  var bottomBorder = scrollHeight - clientHeight - AVAILABLE_DELTA;\n  return bottomBorder < scrollTop;\n};\n\n// src/defaultReduceOptions.ts\nvar defaultReduceOptions = function defaultReduceOptions(prevOptions, loadedOptions) {\n  return [].concat(_toConsumableArray(prevOptions), _toConsumableArray(loadedOptions));\n};\n\n// src/requestOptions.ts\nimport sleep from \"sleep-promise\";\n\n// src/validateResponse.ts\nvar errorText = '[react-select-async-paginate] response of \"loadOptions\" should be an object with \"options\" prop, which contains array of options.';\nvar checkIsResponse = function checkIsResponse(response) {\n  if (!response) {\n    return false;\n  }\n  var options = response.options,\n    hasMore = response.hasMore;\n  if (!Array.isArray(options)) {\n    return false;\n  }\n  if (typeof hasMore !== \"boolean\" && typeof hasMore !== \"undefined\") {\n    return false;\n  }\n  return true;\n};\nvar validateResponse = function validateResponse(response) {\n  if (!checkIsResponse(response)) {\n    console.error(errorText, \"Received:\", response);\n    throw new Error(errorText);\n  }\n  return true;\n};\n\n// src/requestOptions.ts\nvar requestOptions = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(caller, paramsRef, optionsCacheRef, debounceTimeout, setOptionsCache, reduceOptions) {\n    var currentInputValue, isCacheEmpty, currentOptions, newInputValue, response, hasError, loadOptions, _response, options, hasMore, newAdditional;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          currentInputValue = paramsRef.current.inputValue;\n          isCacheEmpty = !optionsCacheRef.current[currentInputValue];\n          currentOptions = isCacheEmpty ? getInitialCache(paramsRef.current) : optionsCacheRef.current[currentInputValue];\n          if (!(currentOptions.isLoading || !currentOptions.hasMore)) {\n            _context.next = 5;\n            break;\n          }\n          return _context.abrupt(\"return\");\n        case 5:\n          setOptionsCache(function (prevOptionsCache) {\n            return _objectSpread(_objectSpread({}, prevOptionsCache), {}, _defineProperty({}, currentInputValue, _objectSpread(_objectSpread({}, currentOptions), {}, {\n              isLoading: true\n            })));\n          });\n          if (!(debounceTimeout > 0 && caller === \"input-change\")) {\n            _context.next = 13;\n            break;\n          }\n          _context.next = 9;\n          return sleep(debounceTimeout);\n        case 9:\n          newInputValue = paramsRef.current.inputValue;\n          if (!(currentInputValue !== newInputValue)) {\n            _context.next = 13;\n            break;\n          }\n          setOptionsCache(function (prevOptionsCache) {\n            if (isCacheEmpty) {\n              var itemForDelete = prevOptionsCache[currentInputValue],\n                restCache = _objectWithoutProperties(prevOptionsCache, [currentInputValue].map(_toPropertyKey));\n              return restCache;\n            }\n            return _objectSpread(_objectSpread({}, prevOptionsCache), {}, _defineProperty({}, currentInputValue, _objectSpread(_objectSpread({}, currentOptions), {}, {\n              isLoading: false\n            })));\n          });\n          return _context.abrupt(\"return\");\n        case 13:\n          hasError = false;\n          _context.prev = 14;\n          loadOptions = paramsRef.current.loadOptions;\n          _context.next = 18;\n          return loadOptions(currentInputValue, currentOptions.options, currentOptions.additional);\n        case 18:\n          response = _context.sent;\n          _context.next = 24;\n          break;\n        case 21:\n          _context.prev = 21;\n          _context.t0 = _context[\"catch\"](14);\n          hasError = true;\n        case 24:\n          if (!hasError) {\n            _context.next = 27;\n            break;\n          }\n          setOptionsCache(function (prevOptionsCache) {\n            return _objectSpread(_objectSpread({}, prevOptionsCache), {}, _defineProperty({}, currentInputValue, _objectSpread(_objectSpread({}, currentOptions), {}, {\n              isLoading: false\n            })));\n          });\n          return _context.abrupt(\"return\");\n        case 27:\n          if (validateResponse(response)) {\n            _response = response, options = _response.options, hasMore = _response.hasMore;\n            newAdditional = response.hasOwnProperty(\"additional\") ? response.additional : currentOptions.additional;\n            setOptionsCache(function (prevOptionsCache) {\n              return _objectSpread(_objectSpread({}, prevOptionsCache), {}, _defineProperty({}, currentInputValue, _objectSpread(_objectSpread({}, currentOptions), {}, {\n                options: reduceOptions(currentOptions.options, options, newAdditional),\n                hasMore: !!hasMore,\n                isLoading: false,\n                isFirstLoad: false,\n                additional: newAdditional\n              })));\n            });\n          }\n        case 28:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[14, 21]]);\n  }));\n  return function requestOptions(_x, _x2, _x3, _x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n// src/useAsyncPaginateBase.ts\nvar increaseStateId = function increaseStateId(prevStateId) {\n  return prevStateId + 1;\n};\nvar useAsyncPaginateBase = function useAsyncPaginateBase(params) {\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var defaultOptions = params.defaultOptions,\n    _params$loadOptionsOn = params.loadOptionsOnMenuOpen,\n    loadOptionsOnMenuOpen = _params$loadOptionsOn === void 0 ? true : _params$loadOptionsOn,\n    _params$debounceTimeo = params.debounceTimeout,\n    debounceTimeout = _params$debounceTimeo === void 0 ? 0 : _params$debounceTimeo,\n    inputValue = params.inputValue,\n    menuIsOpen = params.menuIsOpen,\n    _params$filterOption = params.filterOption,\n    filterOption = _params$filterOption === void 0 ? null : _params$filterOption,\n    _params$reduceOptions = params.reduceOptions,\n    reduceOptions = _params$reduceOptions === void 0 ? defaultReduceOptions : _params$reduceOptions,\n    _params$shouldLoadMor = params.shouldLoadMore,\n    shouldLoadMore = _params$shouldLoadMor === void 0 ? defaultShouldLoadMore : _params$shouldLoadMor;\n  var isMountedRef = useIsMountedRef();\n  var isInitRef = useRef(true);\n  var paramsRef = useRef(params);\n  paramsRef.current = params;\n  var setStateId = useState(0)[1];\n  var optionsCacheRef = useLazyRef(function () {\n    return getInitialOptionsCache(params);\n  });\n  var callRequestOptions = useCallback(function (caller) {\n    requestOptions(caller, paramsRef, optionsCacheRef, debounceTimeout, function (reduceState) {\n      optionsCacheRef.current = reduceState(optionsCacheRef.current);\n      if (isMountedRef.current) {\n        setStateId(increaseStateId);\n      }\n    }, reduceOptions);\n  }, [debounceTimeout]);\n  var handleScrolledToBottom = useCallback(function () {\n    var currentInputValue = paramsRef.current.inputValue;\n    var currentOptions2 = optionsCacheRef.current[currentInputValue];\n    if (currentOptions2) {\n      callRequestOptions(\"menu-scroll\");\n    }\n  }, [callRequestOptions]);\n  useEffect(function () {\n    if (isInitRef.current) {\n      isInitRef.current = false;\n    } else {\n      optionsCacheRef.current = {};\n      setStateId(increaseStateId);\n    }\n    if (defaultOptions === true) {\n      callRequestOptions(\"autoload\");\n    }\n  }, deps);\n  useEffect(function () {\n    if (menuIsOpen && !optionsCacheRef.current[inputValue]) {\n      callRequestOptions(\"input-change\");\n    }\n  }, [inputValue]);\n  useEffect(function () {\n    if (menuIsOpen && !optionsCacheRef.current[\"\"] && loadOptionsOnMenuOpen) {\n      callRequestOptions(\"menu-toggle\");\n    }\n  }, [menuIsOpen]);\n  var currentOptions = optionsCacheRef.current[inputValue] || getInitialCache(params);\n  return {\n    handleScrolledToBottom: handleScrolledToBottom,\n    shouldLoadMore: shouldLoadMore,\n    filterOption: filterOption,\n    isLoading: currentOptions.isLoading,\n    isFirstLoad: currentOptions.isFirstLoad,\n    options: currentOptions.options\n  };\n};\n\n// src/useAsyncPaginate.ts\nvar useAsyncPaginate = function useAsyncPaginate(params) {\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var inputValueParam = params.inputValue,\n    menuIsOpenParam = params.menuIsOpen,\n    defaultInputValueParam = params.defaultInputValue,\n    defaultMenuIsOpenParam = params.defaultMenuIsOpen,\n    onInputChangeParam = params.onInputChange,\n    onMenuCloseParam = params.onMenuClose,\n    onMenuOpenParam = params.onMenuOpen;\n  var _useState = useState2(defaultInputValueParam || \"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputValueState = _useState2[0],\n    setInputValue = _useState2[1];\n  var _useState3 = useState2(!!defaultMenuIsOpenParam),\n    _useState4 = _slicedToArray(_useState3, 2),\n    menuIsOpenState = _useState4[0],\n    setMenuIsOpen = _useState4[1];\n  var inputValue = typeof inputValueParam === \"string\" ? inputValueParam : inputValueState;\n  var menuIsOpen = typeof menuIsOpenParam === \"boolean\" ? menuIsOpenParam : menuIsOpenState;\n  var onInputChange = useCallback2(function (nextInputValue, actionMeta) {\n    if (onInputChangeParam) {\n      onInputChangeParam(nextInputValue, actionMeta);\n    }\n    setInputValue(nextInputValue);\n  }, [onInputChangeParam]);\n  var onMenuClose = useCallback2(function () {\n    if (onMenuCloseParam) {\n      onMenuCloseParam();\n    }\n    setMenuIsOpen(false);\n  }, [onMenuCloseParam]);\n  var onMenuOpen = useCallback2(function () {\n    if (onMenuOpenParam) {\n      onMenuOpenParam();\n    }\n    setMenuIsOpen(true);\n  }, [onMenuOpenParam]);\n  var baseResult = useAsyncPaginateBase(_objectSpread(_objectSpread({}, params), {}, {\n    inputValue: inputValue,\n    menuIsOpen: menuIsOpen\n  }), deps);\n  return _objectSpread(_objectSpread({}, baseResult), {}, {\n    inputValue: inputValue,\n    menuIsOpen: menuIsOpen,\n    onInputChange: onInputChange,\n    onMenuClose: onMenuClose,\n    onMenuOpen: onMenuOpen\n  });\n};\n\n// src/useComponents.ts\nimport { useMemo } from \"react\";\nimport { components as defaultComponents } from \"react-select\";\n\n// src/wrapMenuList.tsx\nimport { useEffect as useEffect2, useRef as useRef2, useCallback as useCallback3 } from \"react\";\nimport composeRefs from \"@seznam/compose-react-refs\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CHECK_TIMEOUT = 300;\nfunction wrapMenuList(MenuList2) {\n  function WrappedMenuList(props) {\n    var selectProps = props.selectProps,\n      innerRef = props.innerRef;\n    var handleScrolledToBottom = selectProps.handleScrolledToBottom,\n      shouldLoadMore = selectProps.shouldLoadMore;\n    var checkTimeoutRef = useRef2();\n    var menuListRef = useRef2(null);\n    var shouldHandle = useCallback3(function () {\n      var el = menuListRef.current;\n      if (!el) {\n        return false;\n      }\n      var scrollTop = el.scrollTop,\n        scrollHeight = el.scrollHeight,\n        clientHeight = el.clientHeight;\n      return shouldLoadMore(scrollHeight, clientHeight, scrollTop);\n    }, [shouldLoadMore]);\n    var checkAndHandle = useCallback3(function () {\n      if (shouldHandle()) {\n        if (handleScrolledToBottom) {\n          handleScrolledToBottom();\n        }\n      }\n    }, [shouldHandle, handleScrolledToBottom]);\n    var setCheckAndHandleTimeout = useCallback3(function () {\n      checkAndHandle();\n      checkTimeoutRef.current = setTimeout(setCheckAndHandleTimeout, CHECK_TIMEOUT);\n    }, [checkAndHandle]);\n    useEffect2(function () {\n      setCheckAndHandleTimeout();\n      return function () {\n        if (checkTimeoutRef.current) {\n          clearTimeout(checkTimeoutRef.current);\n        }\n      };\n    }, []);\n    return /* @__PURE__ */jsx(MenuList2, _objectSpread(_objectSpread({}, props), {}, {\n      innerRef: composeRefs(innerRef, menuListRef)\n    }));\n  }\n  return WrappedMenuList;\n}\n\n// src/useComponents.ts\nvar MenuList = wrapMenuList(defaultComponents.MenuList);\nvar useComponents = function useComponents(components) {\n  return useMemo(function () {\n    return _objectSpread({\n      MenuList: MenuList\n    }, components);\n  }, [components]);\n};\n\n// src/withAsyncPaginate.tsx\nimport { jsx as jsx2 } from \"react/jsx-runtime\";\nfunction withAsyncPaginate(SelectComponent) {\n  function WithAsyncPaginate(props) {\n    var components = props.components,\n      selectRef = props.selectRef,\n      isLoadingProp = props.isLoading,\n      cacheUniqs = props.cacheUniqs,\n      rest = _objectWithoutProperties(props, _excluded);\n    var asyncPaginateProps = useAsyncPaginate(rest, cacheUniqs);\n    var processedComponents = useComponents(components);\n    var isLoading = typeof isLoadingProp === \"boolean\" ? isLoadingProp : asyncPaginateProps.isLoading;\n    return /* @__PURE__ */jsx2(SelectComponent, _objectSpread(_objectSpread(_objectSpread({}, props), asyncPaginateProps), {}, {\n      isLoading: isLoading,\n      components: processedComponents,\n      ref: selectRef\n    }));\n  }\n  WithAsyncPaginate.defaultProps = {\n    selectRef: null,\n    cacheUniqs: [],\n    components: {}\n  };\n  return WithAsyncPaginate;\n}\n\n// src/reduceGroupedOptions.ts\nvar checkGroup = function checkGroup(group) {\n  if (!group) {\n    return false;\n  }\n  var label = group.label,\n    options = group.options;\n  if (typeof label !== \"string\" && typeof label !== \"undefined\") {\n    return false;\n  }\n  if (!Array.isArray(options)) {\n    return false;\n  }\n  return true;\n};\nvar reduceGroupedOptions = function reduceGroupedOptions(prevOptions, loadedOptions) {\n  var res = prevOptions.slice();\n  var mapLabelToIndex = {};\n  var prevOptionsIndex = 0;\n  var prevOptionsLength = prevOptions.length;\n  loadedOptions.forEach(function (optionOrGroup) {\n    var group = checkGroup(optionOrGroup) ? optionOrGroup : {\n      options: [optionOrGroup]\n    };\n    var _group$label = group.label,\n      label = _group$label === void 0 ? \"\" : _group$label;\n    var groupIndex = mapLabelToIndex[label];\n    if (typeof groupIndex !== \"number\") {\n      for (; prevOptionsIndex < prevOptionsLength && typeof mapLabelToIndex[label] !== \"number\"; ++prevOptionsIndex) {\n        var prevGroup = prevOptions[prevOptionsIndex];\n        if (checkGroup(prevGroup)) {\n          mapLabelToIndex[prevGroup.label || \"\"] = prevOptionsIndex;\n        }\n      }\n      groupIndex = mapLabelToIndex[label];\n    }\n    if (typeof groupIndex !== \"number\") {\n      mapLabelToIndex[label] = res.length;\n      res.push(group);\n      return;\n    }\n    res[groupIndex] = _objectSpread(_objectSpread({}, res[groupIndex]), {}, {\n      options: [].concat(_toConsumableArray(res[groupIndex].options), _toConsumableArray(group.options))\n    });\n  });\n  return res;\n};\n\n// src/index.ts\nvar AsyncPaginate = withAsyncPaginate(Select);\nexport { AsyncPaginate, checkIsResponse, reduceGroupedOptions, useAsyncPaginate, useAsyncPaginateBase, useComponents, validateResponse, withAsyncPaginate, wrapMenuList };","map":{"version":3,"mappings":"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","names":["Select","useState","useCallback","useEffect","useRef","useIsMountedRef","useLazyRef","getInitialCache","params","isFirstLoad","options","hasMore","isLoading","additional","getInitialOptionsCache","defaultOptions","defaultAdditional","initialOptions","Array","AVAILABLE_DELTA","defaultShouldLoadMore","scrollHeight","clientHeight","scrollTop","bottomBorder","defaultReduceOptions","prevOptions","loadedOptions","sleep","errorText","checkIsResponse","response","isArray","validateResponse","console","error","Error","requestOptions","caller","paramsRef","optionsCacheRef","debounceTimeout","setOptionsCache","reduceOptions","currentInputValue","current","inputValue","isCacheEmpty","currentOptions","prevOptionsCache","newInputValue","itemForDelete","restCache","hasError","loadOptions","newAdditional","hasOwnProperty","increaseStateId","prevStateId","useAsyncPaginateBase","deps","loadOptionsOnMenuOpen","menuIsOpen","filterOption","shouldLoadMore","isMountedRef","isInitRef","setStateId","callRequestOptions","reduceState","handleScrolledToBottom","useAsyncPaginate","inputValueParam","menuIsOpenParam","defaultInputValueParam","defaultInputValue","defaultMenuIsOpenParam","defaultMenuIsOpen","onInputChangeParam","onInputChange","onMenuCloseParam","onMenuClose","onMenuOpenParam","onMenuOpen","inputValueState","setInputValue","menuIsOpenState","setMenuIsOpen","nextInputValue","actionMeta","baseResult","useMemo","components","defaultComponents","composeRefs","CHECK_TIMEOUT","wrapMenuList","MenuList","WrappedMenuList","props","selectProps","innerRef","checkTimeoutRef","menuListRef","shouldHandle","el","checkAndHandle","setCheckAndHandleTimeout","setTimeout","clearTimeout","useComponents","withAsyncPaginate","SelectComponent","WithAsyncPaginate","selectRef","isLoadingProp","cacheUniqs","rest","asyncPaginateProps","processedComponents","ref","defaultProps","checkGroup","group","label","reduceGroupedOptions","res","slice","mapLabelToIndex","prevOptionsIndex","prevOptionsLength","length","forEach","optionOrGroup","groupIndex","prevGroup","push","AsyncPaginate"],"sources":["D:\\Die Trying\\React\\weather-app\\node_modules\\react-select-async-paginate\\src\\index.ts","D:\\Die Trying\\React\\weather-app\\node_modules\\react-select-async-paginate\\src\\useAsyncPaginate.ts","D:\\Die Trying\\React\\weather-app\\node_modules\\react-select-async-paginate\\src\\useAsyncPaginateBase.ts","D:\\Die Trying\\React\\weather-app\\node_modules\\react-select-async-paginate\\src\\getInitialCache.ts","D:\\Die Trying\\React\\weather-app\\node_modules\\react-select-async-paginate\\src\\getInitialOptionsCache.ts","D:\\Die Trying\\React\\weather-app\\node_modules\\react-select-async-paginate\\src\\defaultShouldLoadMore.ts","D:\\Die Trying\\React\\weather-app\\node_modules\\react-select-async-paginate\\src\\defaultReduceOptions.ts","D:\\Die Trying\\React\\weather-app\\node_modules\\react-select-async-paginate\\src\\requestOptions.ts","D:\\Die Trying\\React\\weather-app\\node_modules\\react-select-async-paginate\\src\\validateResponse.ts","D:\\Die Trying\\React\\weather-app\\node_modules\\react-select-async-paginate\\src\\useComponents.ts","D:\\Die Trying\\React\\weather-app\\node_modules\\react-select-async-paginate\\src\\wrapMenuList.tsx","D:\\Die Trying\\React\\weather-app\\node_modules\\react-select-async-paginate\\src\\withAsyncPaginate.tsx","D:\\Die Trying\\React\\weather-app\\node_modules\\react-select-async-paginate\\src\\reduceGroupedOptions.ts"],"sourcesContent":["import Select from 'react-select';\n\nimport { withAsyncPaginate } from './withAsyncPaginate';\n\nexport { wrapMenuList } from './wrapMenuList';\nexport { reduceGroupedOptions } from './reduceGroupedOptions';\n\nexport { withAsyncPaginate };\n\nexport {\n  checkIsResponse,\n  validateResponse,\n} from './validateResponse';\nexport { useAsyncPaginateBase } from './useAsyncPaginateBase';\nexport { useAsyncPaginate } from './useAsyncPaginate';\nexport { useComponents } from './useComponents';\n\nexport const AsyncPaginate = withAsyncPaginate(Select);\n\nexport * from './types';\n","import {\n  useState,\n  useCallback,\n} from 'react';\nimport type {\n  GroupBase,\n  InputActionMeta,\n} from 'react-select';\n\nimport {\n  useAsyncPaginateBase,\n} from './useAsyncPaginateBase';\n\nimport type {\n  UseAsyncPaginateParams,\n  UseAsyncPaginateBaseResult,\n  UseAsyncPaginateResult,\n} from './types';\n\nexport const useAsyncPaginate = <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  params: UseAsyncPaginateParams<OptionType, Group, Additional>,\n  deps: ReadonlyArray<unknown> = [],\n): UseAsyncPaginateResult<OptionType, Group> => {\n  const {\n    inputValue: inputValueParam,\n    menuIsOpen: menuIsOpenParam,\n    defaultInputValue: defaultInputValueParam,\n    defaultMenuIsOpen: defaultMenuIsOpenParam,\n    onInputChange: onInputChangeParam,\n    onMenuClose: onMenuCloseParam,\n    onMenuOpen: onMenuOpenParam,\n  } = params;\n\n  const [inputValueState, setInputValue] = useState(\n    defaultInputValueParam || '',\n  );\n  const [menuIsOpenState, setMenuIsOpen] = useState(\n    !!defaultMenuIsOpenParam,\n  );\n\n  const inputValue: string = typeof inputValueParam === 'string'\n    ? inputValueParam\n    : inputValueState;\n\n  const menuIsOpen: boolean = typeof menuIsOpenParam === 'boolean'\n    ? menuIsOpenParam\n    : menuIsOpenState;\n\n  const onInputChange = useCallback((\n    nextInputValue: string,\n    actionMeta: InputActionMeta,\n  ): void => {\n    if (onInputChangeParam) {\n      onInputChangeParam(nextInputValue, actionMeta);\n    }\n\n    setInputValue(nextInputValue);\n  }, [onInputChangeParam]);\n\n  const onMenuClose = useCallback((): void => {\n    if (onMenuCloseParam) {\n      onMenuCloseParam();\n    }\n\n    setMenuIsOpen(false);\n  }, [onMenuCloseParam]);\n\n  const onMenuOpen = useCallback((): void => {\n    if (onMenuOpenParam) {\n      onMenuOpenParam();\n    }\n\n    setMenuIsOpen(true);\n  }, [onMenuOpenParam]);\n\n  const baseResult: UseAsyncPaginateBaseResult<OptionType, Group> = useAsyncPaginateBase(\n    {\n      ...params,\n      inputValue,\n      menuIsOpen,\n    },\n    deps,\n  );\n\n  return {\n    ...baseResult,\n    inputValue,\n    menuIsOpen,\n    onInputChange,\n    onMenuClose,\n    onMenuOpen,\n  };\n};\n","import {\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n} from 'react';\n\nimport type {\n  GroupBase,\n} from 'react-select';\n\nimport useIsMountedRef from 'use-is-mounted-ref';\n\nimport { useLazyRef } from '@vtaits/use-lazy-ref';\n\nimport { getInitialCache } from './getInitialCache';\nimport { getInitialOptionsCache } from './getInitialOptionsCache';\nimport { defaultShouldLoadMore } from './defaultShouldLoadMore';\nimport { defaultReduceOptions } from './defaultReduceOptions';\nimport { requestOptions } from './requestOptions';\n\nimport type {\n  OptionsCacheItem,\n  UseAsyncPaginateBaseResult,\n  UseAsyncPaginateBaseParams,\n  RequestOptionsCallerType,\n} from './types';\n\nexport const increaseStateId = (prevStateId: number): number => prevStateId + 1;\n\nexport const useAsyncPaginateBase = <\nOptionType,\nGroup extends GroupBase<OptionType>,\nAdditional,\n  >(\n    params: UseAsyncPaginateBaseParams<OptionType, Group, Additional>,\n    deps: ReadonlyArray<any> = [],\n  ): UseAsyncPaginateBaseResult<OptionType, Group> => {\n  const {\n    defaultOptions,\n    loadOptionsOnMenuOpen = true,\n    debounceTimeout = 0,\n    inputValue,\n    menuIsOpen,\n    filterOption = null,\n    reduceOptions = defaultReduceOptions,\n    shouldLoadMore = defaultShouldLoadMore,\n  } = params;\n\n  const isMountedRef = useIsMountedRef();\n\n  const isInitRef = useRef<boolean>(true);\n  const paramsRef = useRef<UseAsyncPaginateBaseParams<OptionType, Group, Additional>>(params);\n\n  paramsRef.current = params;\n\n  const setStateId = useState(0)[1];\n\n  const optionsCacheRef = useLazyRef(() => getInitialOptionsCache(params));\n\n  const callRequestOptions = useCallback((caller: RequestOptionsCallerType): void => {\n    requestOptions(\n      caller,\n      paramsRef,\n      optionsCacheRef,\n      debounceTimeout,\n      (reduceState) => {\n        optionsCacheRef.current = reduceState(optionsCacheRef.current);\n\n        if (isMountedRef.current) {\n          setStateId(increaseStateId);\n        }\n      },\n      reduceOptions,\n    );\n  }, [debounceTimeout]);\n\n  const handleScrolledToBottom = useCallback((): void => {\n    const currentInputValue = paramsRef.current.inputValue;\n    const currentOptions = optionsCacheRef.current[currentInputValue];\n\n    if (currentOptions) {\n      callRequestOptions('menu-scroll');\n    }\n  }, [callRequestOptions]);\n\n  useEffect(() => {\n    if (isInitRef.current) {\n      isInitRef.current = false;\n    } else {\n      optionsCacheRef.current = {};\n      setStateId(increaseStateId);\n    }\n\n    if (defaultOptions === true) {\n      callRequestOptions('autoload');\n    }\n  }, deps);\n\n  useEffect(() => {\n    if (menuIsOpen && !optionsCacheRef.current[inputValue]) {\n      callRequestOptions('input-change');\n    }\n  }, [inputValue]);\n\n  useEffect(() => {\n    if (\n      menuIsOpen\n      && !optionsCacheRef.current['']\n      && loadOptionsOnMenuOpen\n    ) {\n      callRequestOptions('menu-toggle');\n    }\n  }, [menuIsOpen]);\n\n  const currentOptions: OptionsCacheItem<\n  OptionType,\n  Group,\n  Additional\n  > = optionsCacheRef.current[inputValue]\n    || getInitialCache(params);\n\n  return {\n    handleScrolledToBottom,\n    shouldLoadMore,\n    filterOption,\n    isLoading: currentOptions.isLoading,\n    isFirstLoad: currentOptions.isFirstLoad,\n    options: currentOptions.options,\n  };\n};\n","import type {\n  GroupBase,\n} from 'react-select';\n\nimport type {\n  OptionsCacheItem,\n  UseAsyncPaginateBaseParams,\n} from './types';\n\nexport const getInitialCache = <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  params: UseAsyncPaginateBaseParams<OptionType, Group, Additional>,\n): OptionsCacheItem<OptionType, Group, Additional> => ({\n    isFirstLoad: true,\n    options: [],\n    hasMore: true,\n    isLoading: false,\n    additional: params.additional,\n  });\n","import type {\n  GroupBase,\n} from 'react-select';\n\nimport type {\n  OptionsCache,\n  UseAsyncPaginateBaseParams,\n} from './types';\n\nexport const getInitialOptionsCache = <\nOptionType,\nGroup extends GroupBase<OptionType>,\nAdditional>(\n    {\n      options,\n      defaultOptions,\n      additional,\n      defaultAdditional,\n    }: UseAsyncPaginateBaseParams<OptionType, Group, Additional>,\n  ): OptionsCache<OptionType, Group, Additional> => {\n  const initialOptions = defaultOptions === true\n    ? null\n    : (defaultOptions instanceof Array)\n      ? defaultOptions\n      : options;\n\n  if (initialOptions) {\n    return {\n      '': {\n        isFirstLoad: false,\n        isLoading: false,\n        options: initialOptions,\n        hasMore: true,\n        additional: defaultAdditional || additional,\n      },\n    };\n  }\n\n  return {};\n};\n","import type {\n  ShouldLoadMore,\n} from './types';\n\nconst AVAILABLE_DELTA = 10;\n\nexport const defaultShouldLoadMore: ShouldLoadMore = (scrollHeight, clientHeight, scrollTop) => {\n  const bottomBorder = scrollHeight - clientHeight - AVAILABLE_DELTA;\n\n  return bottomBorder < scrollTop;\n};\n","import type {\n  GroupBase,\n  OptionsOrGroups,\n} from 'react-select';\n\nexport const defaultReduceOptions = <OptionType, Group extends GroupBase<OptionType>>(\n  prevOptions: OptionsOrGroups<OptionType, Group>,\n  loadedOptions: OptionsOrGroups<OptionType, Group>,\n) => [...prevOptions, ...loadedOptions];\n","import type {\n  MutableRefObject,\n} from 'react';\n\nimport type {\n  GroupBase,\n} from 'react-select';\nimport sleep from 'sleep-promise';\n\nimport { getInitialCache } from './getInitialCache';\nimport { validateResponse } from './validateResponse';\n\nimport type {\n  OptionsCache,\n  OptionsCacheItem,\n  UseAsyncPaginateBaseParams,\n  ReduceOptions,\n  RequestOptionsCallerType,\n} from './types';\n\ntype MapOptionsCache<OptionType, Group extends GroupBase<OptionType>, Additional> = (\n  prevCache: OptionsCache<OptionType, Group, Additional>,\n) => OptionsCache<OptionType, Group, Additional>;\n\ntype SetOptionsCache<OptionType, Group extends GroupBase<OptionType>, Additional> = (\n  stateMapper: MapOptionsCache<OptionType, Group, Additional>,\n) => void;\n\nexport const requestOptions = async <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  caller: RequestOptionsCallerType,\n  paramsRef: MutableRefObject<UseAsyncPaginateBaseParams<OptionType, Group, Additional>>,\n  optionsCacheRef: MutableRefObject<OptionsCache<OptionType, Group, Additional>>,\n  debounceTimeout: number,\n  setOptionsCache: SetOptionsCache<OptionType, Group, Additional>,\n  reduceOptions: ReduceOptions<OptionType, Group, Additional>,\n): Promise<void> => {\n  const currentInputValue = paramsRef.current.inputValue;\n\n  const isCacheEmpty = !optionsCacheRef.current[currentInputValue];\n\n  const currentOptions: OptionsCacheItem<OptionType, Group, Additional> = isCacheEmpty\n    ? getInitialCache(paramsRef.current)\n    : optionsCacheRef.current[currentInputValue];\n\n  if (currentOptions.isLoading || !currentOptions.hasMore) {\n    return;\n  }\n\n  setOptionsCache((\n    prevOptionsCache: OptionsCache<OptionType, Group, Additional>,\n  ): OptionsCache<OptionType, Group, Additional> => ({\n    ...prevOptionsCache,\n    [currentInputValue]: {\n      ...currentOptions,\n      isLoading: true,\n    },\n  }));\n\n  if (debounceTimeout > 0 && caller === 'input-change') {\n    await sleep(debounceTimeout);\n\n    const newInputValue = paramsRef.current.inputValue;\n\n    if (currentInputValue !== newInputValue) {\n      setOptionsCache((prevOptionsCache) => {\n        if (isCacheEmpty) {\n          const {\n            [currentInputValue]: itemForDelete,\n            ...restCache\n          } = prevOptionsCache;\n\n          return restCache;\n        }\n\n        return {\n          ...prevOptionsCache,\n          [currentInputValue]: {\n            ...currentOptions,\n            isLoading: false,\n          },\n        };\n      });\n\n      return;\n    }\n  }\n\n  let response;\n  let hasError = false;\n\n  try {\n    const {\n      loadOptions,\n    } = paramsRef.current;\n\n    response = await loadOptions(\n      currentInputValue,\n      currentOptions.options,\n      currentOptions.additional,\n    );\n  } catch (e) {\n    hasError = true;\n  }\n\n  if (hasError) {\n    setOptionsCache((prevOptionsCache) => ({\n      ...prevOptionsCache,\n      [currentInputValue]: {\n        ...currentOptions,\n        isLoading: false,\n      },\n    }));\n\n    return;\n  }\n\n  if (validateResponse(response)) {\n    const {\n      options,\n      hasMore,\n    } = response;\n\n    // eslint-disable-next-line no-prototype-builtins\n    const newAdditional = response.hasOwnProperty('additional')\n      ? response.additional\n      : currentOptions.additional;\n\n    setOptionsCache((prevOptionsCache) => ({\n      ...prevOptionsCache,\n      [currentInputValue]: {\n        ...currentOptions,\n        options: reduceOptions(currentOptions.options, options, newAdditional),\n        hasMore: !!hasMore,\n        isLoading: false,\n        isFirstLoad: false,\n        additional: newAdditional,\n      },\n    }));\n  }\n};\n","import type {\n  GroupBase,\n} from 'react-select';\n\nimport type {\n  Response,\n} from './types';\n\nexport const errorText = '[react-select-async-paginate] response of \"loadOptions\" should be an object with \"options\" prop, which contains array of options.';\n\nexport const checkIsResponse = <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  response: unknown,\n): response is Response<OptionType, Group, Additional> => {\n  if (!response) {\n    return false;\n  }\n\n  const {\n    options,\n    hasMore,\n  } = response as {\n    options?: unknown;\n    hasMore?: unknown;\n  };\n\n  if (!Array.isArray(options)) {\n    return false;\n  }\n\n  if (typeof hasMore !== 'boolean' && typeof hasMore !== 'undefined') {\n    return false;\n  }\n\n  return true;\n};\n\nexport const validateResponse = <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  response: unknown,\n): response is Response<OptionType, Group, Additional> => {\n  if (!checkIsResponse(response)) {\n    // eslint-disable-next-line no-console\n    console.error(errorText, 'Received:', response);\n    throw new Error(errorText);\n  }\n\n  return true;\n};\n","import {\n  useMemo,\n} from 'react';\nimport type {\n  GroupBase,\n  Props as SelectProps,\n} from 'react-select';\n\nimport { components as defaultComponents } from 'react-select';\n\nimport { wrapMenuList } from './wrapMenuList';\n\nexport const MenuList = wrapMenuList(defaultComponents.MenuList);\n\nexport type SelectComponentsConfig<\nOptionType,\nIsMulti extends boolean,\nGroup extends GroupBase<OptionType>,\n> = Partial<SelectProps<OptionType, IsMulti, Group>['components']>;\n\nexport const useComponents = <\nOptionType,\nGroup extends GroupBase<OptionType>,\nIsMulti extends boolean,\n>(\n    components: SelectComponentsConfig<OptionType, IsMulti, Group>,\n  ): SelectComponentsConfig<OptionType, IsMulti, Group> => useMemo(() => ({\n    MenuList,\n    ...components,\n  }), [components]);\n","import {\n  useEffect,\n  useRef,\n  useCallback,\n} from 'react';\nimport type {\n  ReactElement,\n} from 'react';\n\nimport type {\n  GroupBase,\n  MenuListProps,\n} from 'react-select';\n\nimport composeRefs from '@seznam/compose-react-refs';\n\nimport type {\n  ShouldLoadMore,\n} from './types';\n\nexport const CHECK_TIMEOUT = 300;\n\nexport type BaseSelectProps = {\n  handleScrolledToBottom?: () => void;\n  shouldLoadMore: ShouldLoadMore;\n};\n\ntype MenuListType <\nOption = unknown,\nIsMulti extends boolean = boolean,\nGroup extends GroupBase<Option> = GroupBase<Option>,\n> = (props: MenuListProps<Option, IsMulti, Group>) => ReactElement;\n\nexport function wrapMenuList<\nOption = unknown,\nIsMulti extends boolean = boolean,\nGroup extends GroupBase<Option> = GroupBase<Option>,\n>(\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  MenuList: MenuListType<Option, IsMulti, Group>,\n) {\n  function WrappedMenuList(props: MenuListProps<Option, IsMulti, Group>) {\n    const {\n      selectProps,\n      innerRef,\n    } = props;\n\n    const {\n      handleScrolledToBottom,\n      shouldLoadMore,\n    } = selectProps as unknown as BaseSelectProps;\n\n    const checkTimeoutRef = useRef<NodeJS.Timeout>();\n    const menuListRef = useRef<HTMLElement>(null);\n\n    const shouldHandle = useCallback(() => {\n      const el = menuListRef.current;\n\n      // menu is not rendered\n      if (!el) {\n        return false;\n      }\n\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n      } = el;\n\n      return shouldLoadMore(scrollHeight, clientHeight, scrollTop);\n    }, [shouldLoadMore]);\n\n    const checkAndHandle = useCallback(() => {\n      if (shouldHandle()) {\n        if (handleScrolledToBottom) {\n          handleScrolledToBottom();\n        }\n      }\n    }, [shouldHandle, handleScrolledToBottom]);\n\n    const setCheckAndHandleTimeout = useCallback(() => {\n      checkAndHandle();\n\n      checkTimeoutRef.current = setTimeout(setCheckAndHandleTimeout, CHECK_TIMEOUT);\n    }, [checkAndHandle]);\n\n    useEffect(() => {\n      setCheckAndHandleTimeout();\n\n      return (): void => {\n        if (checkTimeoutRef.current) {\n          clearTimeout(checkTimeoutRef.current);\n        }\n      };\n    }, []);\n\n    return (\n      <MenuList\n        {...props}\n        innerRef={composeRefs<HTMLElement>(innerRef, menuListRef)}\n      />\n    );\n  }\n\n  return WrappedMenuList;\n}\n","import type {\n  Ref,\n  ReactElement,\n} from 'react';\nimport type {\n  GroupBase,\n  Props as SelectProps,\n  SelectInstance,\n} from 'react-select';\n\nimport {\n  useAsyncPaginate,\n} from './useAsyncPaginate';\nimport {\n  useComponents,\n} from './useComponents';\n\nimport type {\n  UseAsyncPaginateResult,\n  AsyncPaginateProps,\n  WithAsyncPaginateType,\n} from './types';\n\ntype SelectComponentType = <\nOption = unknown,\nIsMulti extends boolean = boolean,\nGroup extends GroupBase<Option> = GroupBase<Option>,\n>(props: SelectProps<Option, IsMulti, Group> & {\n  ref?: Ref<SelectInstance<Option, IsMulti, Group>>;\n}) => ReactElement;\n\nexport function withAsyncPaginate(\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  SelectComponent: SelectComponentType,\n): WithAsyncPaginateType {\n  function WithAsyncPaginate<\n  OptionType,\n  Group extends GroupBase<OptionType>,\n  Additional,\n  IsMulti extends boolean = false,\n  >(props: AsyncPaginateProps<OptionType, Group, Additional, IsMulti>): ReactElement {\n    const {\n      components,\n      selectRef,\n      isLoading: isLoadingProp,\n      cacheUniqs,\n      ...rest\n    } = props;\n\n    const asyncPaginateProps: UseAsyncPaginateResult<OptionType, Group> = useAsyncPaginate(\n      rest,\n      cacheUniqs,\n    );\n\n    const processedComponents = useComponents<OptionType, Group, IsMulti>(components);\n\n    const isLoading = typeof isLoadingProp === 'boolean'\n      ? isLoadingProp\n      : asyncPaginateProps.isLoading;\n\n    return (\n      <SelectComponent\n        {...props}\n        {...asyncPaginateProps}\n        isLoading={isLoading}\n        components={processedComponents}\n        ref={selectRef}\n      />\n    );\n  }\n\n  WithAsyncPaginate.defaultProps = {\n    selectRef: null,\n    cacheUniqs: [],\n    components: {},\n  };\n\n  return WithAsyncPaginate;\n}\n","import type {\n  GroupBase,\n  OptionsOrGroups,\n} from 'react-select';\n\nexport const checkGroup = (group: unknown): group is GroupBase<unknown> => {\n  if (!group) {\n    return false;\n  }\n\n  const {\n    label,\n    options,\n  } = group as {\n    label?: unknown;\n    options?: unknown;\n  };\n\n  if (typeof label !== 'string' && typeof label !== 'undefined') {\n    return false;\n  }\n\n  if (!Array.isArray(options)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const reduceGroupedOptions = <\nOptionType,\nGroup extends GroupBase<OptionType>,\n>(\n    prevOptions: OptionsOrGroups<OptionType, Group>,\n    loadedOptions: OptionsOrGroups<OptionType, Group>,\n  ): OptionsOrGroups<OptionType, Group> => {\n  const res = prevOptions.slice();\n\n  const mapLabelToIndex: Record<string, number> = {};\n  let prevOptionsIndex = 0;\n  const prevOptionsLength = prevOptions.length;\n\n  loadedOptions.forEach((optionOrGroup) => {\n    const group = checkGroup(optionOrGroup)\n      ? optionOrGroup\n      : {\n        options: [optionOrGroup],\n      } as unknown as Group;\n\n    const {\n      label = '',\n    } = group;\n\n    let groupIndex = mapLabelToIndex[label];\n    if (typeof groupIndex !== 'number') {\n      for (;\n        prevOptionsIndex < prevOptionsLength && typeof mapLabelToIndex[label] !== 'number';\n        ++prevOptionsIndex\n      ) {\n        const prevGroup = prevOptions[prevOptionsIndex];\n\n        if (checkGroup(prevGroup)) {\n          mapLabelToIndex[prevGroup.label || ''] = prevOptionsIndex;\n        }\n      }\n\n      groupIndex = mapLabelToIndex[label];\n    }\n\n    if (typeof groupIndex !== 'number') {\n      mapLabelToIndex[label] = res.length;\n      res.push(group);\n      return;\n    }\n\n    res[groupIndex] = {\n      ...res[groupIndex],\n      options: [...(res[groupIndex] as Group).options, ...group.options],\n    };\n  });\n\n  return res;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}